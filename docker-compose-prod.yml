version: "3.8"

services:
  next-app:
      container_name: bausenberg-check-in-next-app
      build:
        context: ./
        dockerfile: Dockerfile
      environment:
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        NEXTAUTH_URL: ${NEXTAUTH_URL}
        NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
        ADMIN_PASSWORD: ${ADMIN_PASSWORD}
        DATABASE_URL: ${DATABASE_URL_DOCKER}
        CHECKIN_RATE_LIMIT: ${CHECKIN_RATE_LIMIT}
        #NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}

      restart: always
      depends_on:
        - db
      ports:
        - 3000:3000
      labels:
        traefik.enable: true
        traefik.http.routers.bausenberg-check-in.rule: "Host(`${TRAEFIK_DOMAIN}`)"
        traefik.http.routers.bausenberg-check-in.entrypoints: websecure
        traefik.http.routers.bausenberg-check-in.tls.certresolver: myresolver
        traefik.http.routers.bausenberg-check-in.priority: 100
        traefik.port: 3000

  db:
    image: postgres:10
    restart: always
    container_name: bausenberg-check-in-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
      
  traefik:
    image: traefik
    restart: unless-stopped
    container_name: traefik
    command:
      #- "--log.level=DEBUG"
      #- "--api.insecure=true"
      - "--log.level=ERROR"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=bausenberg@thermik4u.de"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    labels:
      traefik.http.routers.redirs.rule: HostRegexp(`{host:.+}`)
      traefik.http.routers.redirs.entrypoints: web
      traefik.http.routers.redirs.middlewares: redirect-to-https
      traefik.enable: true
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https
      traefik.http.middlewares.redirect-to-https.redirectscheme.permanent: true

    ports:
      - "80:80"
      - "443:443"
      #- "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  db:

networks:
  default:
    external:
      name: traefik

  
